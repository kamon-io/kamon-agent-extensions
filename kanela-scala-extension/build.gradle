/*
 * =========================================================================================
 * Copyright Â© 2013-2018 the kamon project <http://kamon.io/>
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 * =========================================================================================
 */

plugins {
    id 'scala'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'com.github.maiflai.scalatest' version '0.18'
    id 'com.adtran.scala-multiversion-plugin' version '1.0.28'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.scala-lang:scala-library:%scala-version%'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    provided(kamon_agent_dep)

    testCompile 'org.mockito:mockito-core:2.4.2'
    testCompile 'org.scalatest:scalatest_%%:3.0.1'
    testRuntime 'org.pegdown:pegdown:1.4.2'
}

test {
    testLogging {
        // show std-output and std-error
        showStandardStreams = true
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['scalaPublication']

    pkg {
        repo = 'releases'
        name = 'kanela-scala-extension'
        userOrg = 'kamon-io'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/kamon-io/kamon-agent-extensions'

        version {
            name = "${version}"
            desc = 'Agent Scala Extension'
            released  = new Date()
        }
    }
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
        }
    }
    developers {
        developer {
            id "dpsoft"
            name "Diego Parra"
            url "https://twitter.com/diegolparra"
        }

        developer {
            id "ivantopo"
            name "Ivan Topolnjak"
            url "https://twitter.com/ivantopo"
        }

        developer {
            id "cspinetta"
            name "Cristian Spinetta"
            url "https://twitter.com/c_spinetta"
        }
    }

    scm {
        url "https://github.com/kamon-io/kamon-agent-extensions"
    }
}

publishing {
    publications {
        scalaPublication(MavenPublication) { publication ->
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'io.kamon'
            artifactId 'kanela-scala-extension'
            version "${version}"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'The Open Source scala-extension for kamon-agent')
                root.appendNode('name', 'Agent Scala Extension')
                root.appendNode('url', 'http://kamon.io')
                root.children().last() + pomConfig
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
